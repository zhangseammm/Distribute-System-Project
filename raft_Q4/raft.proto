syntax = "proto3";
package raft;

// ─── From Q3 ────────────────────────────────────────────────────────────────────
message RequestVoteRequest {
  int64 term       = 1;
  string candidateId = 2;
}
message RequestVoteResponse {
  int64 term        = 1;
  bool  voteGranted = 2;
}
service Raft {
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse);
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
}

// ─── Log‐replication additions ─────────────────────────────────────────────────

message LogEntry {
  int64 index     = 1;  // position in the log
  int64 timestamp = 2;  // leader’s clock when appending
  string operation = 3; // the client‐requested op
}

message AppendEntriesRequest {
  int64 term         = 1;               // unused in this simplified version
  string leaderId    = 2;
  repeated LogEntry entries       = 3;  // entire log
  int64    commitIndex = 4;            // up to which index is committed
}
message AppendEntriesResponse {
  int64 term    = 1;
  bool  success = 2;
}

// ─── Client ↔ server service for submitting ops ────────────────────────────────
message OperationRequest {
  string operation = 1;
}
message OperationResponse {
  bool   success = 1;
  string result  = 2;
}

service ClientService {
  rpc Execute(OperationRequest) returns (OperationResponse);
}